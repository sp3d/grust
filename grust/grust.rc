/* This file is part of Grust, GObject introspection bindings for Rust
 *
 * Copyright (C) 2013  Mikhail Zabaluev <mikhail.zabaluev@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301  USA
 */

#[feature(globs)];

#[crate_id = "grust#0.1"];

#[crate_type = "lib"];

#[desc = "GObject introspection bindings"];
#[license = "LGPL 2.1"];
#[author = "Mikhail Zabaluev"];

pub mod eventloop;
pub mod gstr;
pub mod ffi;
pub mod object;
pub mod plumbing;
pub mod types;
mod init;

// Reexports into the top level do not work outside of a crate
// due to https://github.com/mozilla/rust/issues/6745
pub type gboolean = types::gboolean;
pub type utf8 = gstr::utf8;
pub type Object = plumbing::Object;
pub type Interface<T> = object::Interface<T>;

// For the same reason as above, init has to be proxied by a function below
#[inline]
pub fn init() { init::init(); }
